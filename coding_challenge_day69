#brute force:
class Solution {
public:
    vector<string> findAndReplacePattern(vector<string>& words, string pattern) {
       int n=pattern.size();
       int m=words.size();
      vector<string> res;
       for(int i=0;i<m;i++){
            unordered_map<char,char> mp1;
            unordered_map<char,char> mp2;
             int ispatten=1;
            for(int j=0;j<n;j++){
                if(mp1.find(words[i][j])==mp1.end()){
                    if(mp2.find(pattern[j])==mp2.end()){
                        mp1[words[i][j]]=pattern[j];
                        mp2[pattern[j]]=words[i][j];
                       
                    }
                    else {
                        ispatten=0;
                        break;
                    }
                }
                else{
                    if(mp1[words[i][j]]!=pattern[j]){
                        ispatten=0;
                        break;
                    }
                }
            }
            if(ispatten==1) {
                res.push_back(words[i]);
               
            }

       }
       return res; 
    }
};
