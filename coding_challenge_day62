class Solution {
public:
    int maxNumberOfFamilies(int n, vector<vector<int>>& reservedSeats) {
        int m=reservedSeats.size();
        int count=0;
        unordered_map<int,vector<int>> adj;
        for(int i=0;i<m;i++){
            adj[reservedSeats[i][0]].push_back(reservedSeats[i][1]);
        }
        for(auto &[row,seats]:adj){
            int a=0;
            int b1=0;
            int b2=0;
            int c=0;
            
            for(int s:seats){
                if(s>1&&s<=3) a++;
                else if(s>3&&s<=5) b1++;
                else if(s>5&&s<=7) b2++;
                else if(s>7&&s<=9) c++;
                cout<<s<<" ";
            }
            int b=b1+b2;
            cout<<a<<" "<<b<<" "<<c<<" ";
            if(b>2) continue;
            if(b==0){
                if(a==0&c==0){
                     count=count+2;
                     continue;
                }
                else count++;
            }
            else{
                if(a==0&&b1==0||b2==0&&c==0) count++;
            }
        }
        count+=(long long)(n-adj.size())*2;
        return count;
    }
};
