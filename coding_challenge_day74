class Solution {
public:
    vector<string> wordSubsets(vector<string>& words1, vector<string>& words2) {
        int n=words1.size();
        int m=words2.size();
        unordered_map<char,int> mp1;
        vector<string> res;
        for(int i=0;i<m;i++){
        unordered_map<char, int> temp;
        for(char c:words2[i]){
            temp[c]++;   
        }
        for (auto &p : temp) {
                mp1[p.first] = max(mp1[p.first], p.second);
        }

        }
        for(int i=0;i<n;i++){
            unordered_map<char,int> mp2;
            for(char c:words1[i]){
                mp2[c]++;
            }
            int found=1;
            for(auto c:mp1){
                if(mp2[c.first]<c.second){
                    found=0;
                    break;
                }
            }
            if(found){
                res.push_back(words1[i]);
            }
        }
        return res;
    }
};
